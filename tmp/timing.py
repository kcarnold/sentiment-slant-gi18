# -*- coding: utf-8 -*-
"""
Created on Tue Jun 13 13:55:21 2017

@author: kcarnold
"""

import json
#%%
stats = json.loads('''
{"numInflight":0,"nosugg":[91,162,27,53,24,65,254,186,42,62,112,332,60,79,28,74,104,30,64,72,76,75,70,405,228,670,87,123,78,30,51,37,56,53,98,50,50,64,72,90,74,74,51,56,503,42,88,47,85,64,72,102,73,68,143,73,82,55,78,122,274,167,45,81,219,49,51,54,146,115,61,71,233,64,104,40,80,75,220,59,54,65,60,365,119,36,83,143,55,101,193,50,82,109,410,54,99,35,80,138,484,41,87,406],"diverse":[167,327,276,201,419,178,377,220,200,349,249,448,190,244,315,189,389,396,228,417,331,649,197,371,301,553,203,308,403,454,209,7,104,203,7,5,33,255,288,467,37,193,383,259,189,190,226,224,566,279,349,564,171,486,270,177,361,161,128,439,326,302,351,176,360,360,171,350,145,182,237,347,578,441,257,351,331,399,277,224,204,23,63,111,169,316,410,531,382,262,289,618,205,184,367,207,392,246,58,249,211,314,557,848,203,396,277,322,325,212,312,402,97,499,277,321,299,94,204,495,301,134,103,35,35,314,84,130,243,384,204,278,363,3,194,190,277,314,317,463,772,214,232,208,391,217,219,396,289,377,324,404,395,206,390,247,305,267,89,223,89,276,286,424,196,440,152,333,77,73,138,187,381,717,339,296,278,227,411,511,257,537,222,466,239,446,338,178,443,510,661,520,152,353,27,218,206,400,153,307,294,389,291,728,415,305,247,344,223,417,440,217],"match":[161,269,376,271,298,239,464,178,359,301,462,200,604,550,215,421,181,389,193,533,318,301,445,492,708,181,366,188,477,281,422,295,222,162,364,69,264,385,106,234,407,382,383,413,146,319,185,388,380,509,225,429,227,181,349,3,3,187,229,143,342,608,223,314,189,397,471,204,47,222,176,418,586,537,126,175,369,233,458,162,351,184,480,254,232,163,335,246,189,349,179,255,497,159,378,116,191,120,465,157,336,249,188,459,231,426,391,365,182,521,351,195,530,234,25,40,191,384,213,416,350,648,213,240,273,200,345,241,656,494,187,253,33,231,214,156,151,402,261,193,376,318,711,346,202,208,214,187,382,38,89,173,364,177,175,190,412,213,163,225,186,511,204,46,174,355,185,355,232,506,347,258,669,503,26,283,293,304,278,839,422,343,177,340,129,458,185,530,332,180,481,349,233,261,443,249,66,239,32,196,265,502,184,399,209,316,245,260,620,410,230,285,482,315,253,623,248,115,448,478,449,640,749,191,390,46,253,199,358,250,44,71,213,192,556,330,195,475,164,333,36,60,199,377,193,386,203,448,283,338,330,429,413,518,375,234,523,414,227,466,205,399,392,537,436,325,469,172,456,121,411,350,380,221,234,223,419,291,346,303,261,498,226,311,248,38,213,421,221,415,228,349,628,562,239,61,55,39,194,356,395,76,280,326,166,424,164,208,321,273,73,78,218,357,199,441,197,78,50,241,102,213,363,297,102,238,429,148,244,431,375,355,283,578,285,338,326,425,514,170,354,335,421,146,231,243,228,430,285,86,240,278,597,676,623,606,234,162,160,217,414,372,472,202,190,385,543,603,528,327,237,277,163,393,130,160,318,190,513,284,132,177,304,361,61,245,310,38,197,142,226,492,401,229,530,192,240,360,203,400,166,393,277,460,326,297,237,299,436,489,291,575,364,247,143,440,232,368,220,415,372,253,304,548,276,343,341,503,187,381,221,417,207,402,354,196,683,495,801,695,652,266,315,266,357,160,402,351,59,114,77,121,317,382,517,105,223,283,239,209,206,402,214,204,145,278,116,308,144,487,494,787,360,164,352,366,548,416,179,368,202,352,107,452,341,203,359,245,290,122,409,484,815,45,80,195,166,352,248,437,266,314,361,197,359,327,214,522,200,221,417,177,353,207,290,508,288,433,184,105,376,285,426,579,380,214,211,405,453,60,101,65,63,221,410,220,133,354,354,211,455,205,388,74,119,113,198,392,68,264,302,71,346,554,186,428,534,467,539,292,283,420,202,397,222,266,337,314,537,195,397,357,577,227,426,284,523,226,272,182,369,178,367,114,207,41,37,206,545,387,263,263,358,234,431,175,258,512,331,340,315,120,202,196,390,233,477,212,281,734,765,491,281,84,201,691,406,521,81,192,538,342,381,600,389,731,863,550,331,378,241,437,375,189,274,216,411,206,402,331,332,616,298,265,550,325,295,240,501,365,248,273,495,197,584,231,339,578,440,129,140,173,359,73,68,230,282,430,221,737,913,707,758,948,81,80,213,139,239,93,57,88,106,5,94,90,223,417,190,341,36,195,310,304,602,535,223,224,420,92,190,385,234,450,194,375,541,302]}''')
import pandas as pd
stats = pd.DataFrame([dict(type=typ, val=val) for typ, vals in stats.items() if isinstance(vals, list) for val in vals])
import seaborn as sns
sns.violinplot(x='type', y='val', data=stats)